{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport './ExpenseItem.css';\nimport './Expenses.css';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filterYear, setFilterYear] = useState('all');\n  /* MY  Long idea\r\n  const renderElements = (tmpElements) => {\r\n      const renderedElements = [];\r\n      tmpElements.forEach(element => {\r\n          if (parseInt(filterYear) === parseInt(element.date.getFullYear()) || filterYear === 'all' || filterYear === '')\r\n              renderedElements.push(<ExpenseItem key={element.id} title={element.title} amount={element.amount} date={element.date} />)\r\n      });\r\n        return renderedElements;\r\n  };\r\n  */\n\n  console.log(props.elements);\n  const filteredExpenses = props.elements.filter(expense => {\n    return expense.date.getFullYear().toString() === filterYear || filterYear === 'all';\n  });\n\n  const onExpensesFilterHandler = year => {\n    setFilterYear(year);\n  };\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 27\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => {\n      return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        onExpensesFilter: onExpensesFilterHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expenses, \"AIcOCmUPcG3p6lrx8oloZB6CoSE=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpensesFilter","useState","Expenses","props","filterYear","setFilterYear","console","log","elements","filteredExpenses","filter","expense","date","getFullYear","toString","onExpensesFilterHandler","year","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAO,gBAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,KAAD,CAA5C;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEIK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,QAAlB;AACA,QAAMC,gBAAgB,GAAGN,KAAK,CAACK,QAAN,CAAeE,MAAf,CAAuBC,OAAD,IAAa;AACxD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,UAA1C,IAAwDA,UAAU,KAAG,KAA5E;AACH,GAFwB,CAAzB;;AAIA,QAAMW,uBAAuB,GAAIC,IAAD,IAAU;AACtCX,IAAAA,aAAa,CAACW,IAAD,CAAb;AACH,GAFD;;AAIA,MAAIC,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIR,gBAAgB,CAACS,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BD,IAAAA,eAAe,GAAGR,gBAAgB,CAACU,GAAjB,CAAsBR,OAAD,IAAa;AAChD,0BACI,QAAC,WAAD;AAEI,QAAA,KAAK,EAAEA,OAAO,CAACS,KAFnB;AAGI,QAAA,MAAM,EAAET,OAAO,CAACU,MAHpB;AAII,QAAA,IAAI,EAAEV,OAAO,CAACC;AAJlB,SACSD,OAAO,CAACW,EADjB;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARiB,CAAlB;AASH;;AAED,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,gBAAgB,EAAEP;AAAlC;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKE,eAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA9CD;;GAAMf,Q;;KAAAA,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import './ExpenseItem.css'\r\nimport './Expenses.css'\r\nimport ExpenseItem from './ExpenseItem';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport { useState } from 'react';\r\n\r\nconst Expenses = (props) => {\r\n    const [filterYear, setFilterYear] = useState('all');\r\n\r\n    /* MY  Long idea\r\n    const renderElements = (tmpElements) => {\r\n        const renderedElements = [];\r\n        tmpElements.forEach(element => {\r\n            if (parseInt(filterYear) === parseInt(element.date.getFullYear()) || filterYear === 'all' || filterYear === '')\r\n                renderedElements.push(<ExpenseItem key={element.id} title={element.title} amount={element.amount} date={element.date} />)\r\n        });\r\n\r\n        return renderedElements;\r\n    };\r\n    */\r\n    console.log(props.elements);\r\n    const filteredExpenses = props.elements.filter((expense) => {\r\n        return expense.date.getFullYear().toString() === filterYear || filterYear==='all';\r\n    });\r\n\r\n    const onExpensesFilterHandler = (year) => {\r\n        setFilterYear(year);\r\n    };\r\n\r\n    let expensesContent = <p>No expenses found.</p>\r\n\r\n    if (filteredExpenses.length > 0) {\r\n        expensesContent = filteredExpenses.map((expense) => {\r\n            return (\r\n                <ExpenseItem\r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                />);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className='expenses'>\r\n                <ExpensesFilter onExpensesFilter={onExpensesFilterHandler} />\r\n                {expensesContent}\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}